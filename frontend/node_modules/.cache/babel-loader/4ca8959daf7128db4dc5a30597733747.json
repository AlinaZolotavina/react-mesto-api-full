{"ast":null,"code":"class Api {\n  constructor(data) {\n    this._serverUrl = data.serverUrl;\n    this._token = data.token;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._serverUrl}cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._serverUrl}cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  deleteCard(data) {\n    return fetch(`${this._serverUrl}cards/${data}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  getUserData() {\n    return fetch(`${this._serverUrl}users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._checkResponse(res));\n  }\n\n  changeUserData(data) {\n    return fetch(`${this._serverUrl}users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._serverUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  changeLikeCardStatus(data, isLiked) {\n    if (!isLiked) {\n      console.log('like');\n      return fetch(`${this._serverUrl}cards/${data}/likes`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        }\n      }).then(res => this._checkResponse(res));\n    } else {\n      console.log('dislike');\n      return fetch(`${this._serverUrl}cards/${data}/likes`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._token\n        }\n      }).then(res => this._checkResponse(res));\n    }\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n}\n\nconst api = new Api({\n  serverUrl: 'https://mesto.nomoreparties.co/v1/cohort-40/',\n  token: 'c4f5357d-335f-4f00-b321-6e024ea9f5d9'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","data","_serverUrl","serverUrl","_token","token","_checkResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","headers","authorization","then","addCard","method","body","JSON","stringify","name","link","deleteCard","getUserData","changeUserData","about","changeAvatar","avatar","changeLikeCardStatus","isLiked","console","log","getInitialData","all","api"],"sources":["C:/Users/Алина/dev/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(data) {\n    this._serverUrl = data.serverUrl;\n    this._token = data.token;\n  }\n\n  _checkResponse(res) {\n    if(res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._serverUrl}cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._serverUrl}cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  deleteCard(data) {\n    return fetch(`${this._serverUrl}cards/${data}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n      }\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  getUserData() {\n    return fetch(`${this._serverUrl}users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  changeUserData(data) {\n    return fetch(`${this._serverUrl}users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._serverUrl}users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then((res) => this._checkResponse(res));\n  }\n\n  changeLikeCardStatus(data, isLiked) {\n    if (!isLiked) {\n      console.log('like');\n      return fetch(`${this._serverUrl}cards/${data}/likes`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._token,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then((res) => this._checkResponse(res));\n    } else {\n      console.log('dislike');\n      return fetch(`${this._serverUrl}cards/${data}/likes`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._token\n        }\n      })\n      .then((res) => this._checkResponse(res));\n    }\n  }\n\n  getInitialData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n}\n\nconst api = new Api({\n  serverUrl: 'https://mesto.nomoreparties.co/v1/cohort-40/',\n  token: 'c4f5357d-335f-4f00-b321-6e024ea9f5d9',\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}