{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0438\\u043D\\u0430\\\\dev\\\\mesto-react\\\\src\\\\components\\\\PopupWithForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopupWithForm(_ref) {\n  _s();\n\n  let {\n    name,\n    title,\n    formName,\n    children,\n    buttonText,\n    isOpen,\n    onClose,\n    onSubmit,\n    inputs\n  } = _ref;\n  const [isFormValid, setFormValid] = useState(false);\n  const [buttonClassName, setButtonClassName] = useState('button_inactive');\n\n  function hasInvalidInput(inputs) {\n    return inputs.some(input => {\n      return !input.validity.valid;\n    });\n  }\n\n  useEffect(() => {\n    if (hasInvalidInput()) {\n      setFormValid(false);\n      setButtonClassName('button_inactive');\n    } else {\n      setFormValid(true);\n      setButtonClassName('');\n    }\n  }, [inputs]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_${name} ${isOpen ? 'popup_is-opened' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        name: formName,\n        noValidate: true,\n        onSubmit: onSubmit,\n        children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button button_type_submit ${isFormValid ? buttonClassName : ''}`,\n          type: \"submit\",\n          disabled: isFormValid ? true : false,\n          children: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-btn\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopupWithForm, \"E9lOo5KT8VnKSVm0tPCoNj7AvpA=\");\n\n_c = PopupWithForm;\nexport default PopupWithForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"names":["React","useState","useEffect","PopupWithForm","name","title","formName","children","buttonText","isOpen","onClose","onSubmit","inputs","isFormValid","setFormValid","buttonClassName","setButtonClassName","hasInvalidInput","some","input","validity","valid"],"sources":["C:/Users/Алина/dev/mesto-react/src/components/PopupWithForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction PopupWithForm({ name, title, formName, children, buttonText, isOpen, onClose, onSubmit, inputs}) {\r\n  const [isFormValid, setFormValid] = useState(false);\r\n  const [buttonClassName, setButtonClassName] = useState('button_inactive');\r\n\r\n  function hasInvalidInput(inputs) {\r\n    return inputs.some((input) => {\r\n      return !input.validity.valid;\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (hasInvalidInput()) {\r\n      setFormValid(false);\r\n      setButtonClassName('button_inactive');\r\n    } else {\r\n      setFormValid(true);\r\n      setButtonClassName('')\r\n    }\r\n  }, [inputs]);\r\n\r\n\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_is-opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <form className=\"form\" name={formName} noValidate onSubmit={onSubmit}>\r\n          {children}\r\n          <button className={`button button_type_submit ${isFormValid ? buttonClassName : ''}`} type=\"submit\" disabled={isFormValid ? true : false}>{buttonText}</button>\r\n        </form>\r\n        <button className=\"popup__close-btn\" onClick={onClose}></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,aAAT,OAA0G;EAAA;;EAAA,IAAnF;IAAEC,IAAF;IAAQC,KAAR;IAAeC,QAAf;IAAyBC,QAAzB;IAAmCC,UAAnC;IAA+CC,MAA/C;IAAuDC,OAAvD;IAAgEC,QAAhE;IAA0EC;EAA1E,CAAmF;EACxG,MAAM,CAACC,WAAD,EAAcC,YAAd,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,iBAAD,CAAtD;;EAEA,SAASgB,eAAT,CAAyBL,MAAzB,EAAiC;IAC/B,OAAOA,MAAM,CAACM,IAAP,CAAaC,KAAD,IAAW;MAC5B,OAAO,CAACA,KAAK,CAACC,QAAN,CAAeC,KAAvB;IACD,CAFM,CAAP;EAGD;;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIe,eAAe,EAAnB,EAAuB;MACrBH,YAAY,CAAC,KAAD,CAAZ;MACAE,kBAAkB,CAAC,iBAAD,CAAlB;IACD,CAHD,MAGO;MACLF,YAAY,CAAC,IAAD,CAAZ;MACAE,kBAAkB,CAAC,EAAD,CAAlB;IACD;EACF,CARQ,EAQN,CAACJ,MAAD,CARM,CAAT;EAWA,oBACE;IAAK,SAAS,EAAG,oBAAmBR,IAAK,IAAGK,MAAM,GAAG,iBAAH,GAAuB,EAAG,EAA5E;IAAA,uBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,cAAd;QAAA,UAA8BJ;MAA9B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAC,MAAhB;QAAuB,IAAI,EAAEC,QAA7B;QAAuC,UAAU,MAAjD;QAAkD,QAAQ,EAAEK,QAA5D;QAAA,WACGJ,QADH,eAEE;UAAQ,SAAS,EAAG,6BAA4BM,WAAW,GAAGE,eAAH,GAAqB,EAAG,EAAnF;UAAsF,IAAI,EAAC,QAA3F;UAAoG,QAAQ,EAAEF,WAAW,GAAG,IAAH,GAAU,KAAnI;UAAA,UAA2IL;QAA3I;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAQ,SAAS,EAAC,kBAAlB;QAAqC,OAAO,EAAEE;MAA9C;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAjCQP,a;;KAAAA,a;AAmCT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}